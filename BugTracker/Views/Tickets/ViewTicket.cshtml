@model IndexTicketViewModel

@{
    ViewBag.Title = "ViewTicket";
}

<h4>@Model.TicketTitle</h4>

<div>
    Description:
    <p>@Model.TicketDescription</p>
    <p>Type: @Model.TicketType</p>
    <p>Priority: @Model.TicketPriority</p>
    <p>Status: @Model.TicketStatus</p>
</div>
<p>Created: @Model.DateCreated</p>
<p>Updated: @Model.DateUpdated</p>
<p>Project: @Model.ProjectName</p>
<p>Assigned Members: @Model.TicketAssignees.Count()</p>
<p>Created By: @Model.TicketOwner.NameOfUser</p>
<p><a href="@Url.Action("EditAttachments", "Tickets", new { ticketId = Model.Id })">Attachments</a></p>


<div class="row">
    <div class="col-md-2">
        @foreach (var image in Model.MediaUrls)
        {
            <img class="img-responsive" src="@Url.Content(image)" />
        }
    </div>
</div>

<div>
    @foreach (var history in Model.TicketHistories)
    {
        <div style="border: 2px solid blue; margin-top: 15px; padding-left: 10px; padding-right: 10px">
            <p>Change made by @history.UserName</p>
            <p>Date: @history.DateUpdated</p>
            @foreach (var change in history.Changes)
            {
                <p>@change</p>
            }
        </div>
    }
</div>





@if (Model.AvailableForUser)
{
    <form method="post" action="@Url.Action("CreateComment", "Comments", new { ticketId = Model.Id })">
        <div class="form-group">
            @Html.LabelFor(input => input.CommentData, "Comment")
            @Html.TextAreaFor(input => input.CommentData, new { @class = "form-control", placeholder = "" })
            @Html.ValidationMessageFor(input => input.CommentData)
        </div>
        <button type="submit" class="btn btn-default">Submit</button>
    </form>
}


<div>
    @for (var comment = 0; comment < Model.Comments.Count(); comment++)
    {
        <p class="each-comment">@Model.Comments[comment].CommentData</p>
        if (Model.Comments[comment].AvailableForUser == true)
        {
            <form method="post" action="@Url.Action("DeleteComment", "Comments", new { commentId = Model.Comments[comment].CommentId })">
                <a href="#" class="btn-delete-comment">Delete Comment</a>
            </form>

            <a id="@Model.Comments[comment].CommentId" class="@Model.Id" data-toggle="modal" href="#@Model.Id" onclick="ModalContentFetcher()">Edit</a>
        }
    }
</div>


@if (User.IsInRole("Submitter"))
{
    <div>
        <div id="@Model.Id" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Edit Comment</h4>
                    </div>
                    <div class="modal-body">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script>
    $(function () {
        $(".btn-delete-comment").on('click', function (e) {
            e.preventDefault();
            $(this).closest('form').submit();
        });
    });


    let htmlModalCaller = document.querySelector('.@Model.Id');


    function ModalContentFetcher() {
        return fetch(`../../Comments/_EditComment/?commentId=${htmlModalCaller.id}`,
        {
            method: "Get"
        }).then(
            function(response) {
                if (response.status !== 200) {
                    console.log('Looks like there was a problem. Status Code: ' +
                        response.status);
                    return;
                }
                //console.log(response);

                response.text()/*.json()*/.then(function (data) {
                    //console.log(data);
                    DomAdder(data);
                });
            }
        )
        .catch(function (err) {
                console.log('Fetch Error :-S', err);
        });
    }

    function DomAdder(element) {
        var domelement = document.querySelector(".modal-body");
        return domelement.insertAdjacentHTML('afterbegin', element);
    }
</script>